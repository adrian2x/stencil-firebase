/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ColumnDef } from "./components/ag-grid/ag-grid";
export namespace Components {
    interface AgGrid {
        "columnDefs": ColumnDef[];
        "darkMode"?: boolean;
        "height": string;
        "preferRefresh"?: boolean;
        "rowData": any[];
    }
    interface AgGridDemoPage {
        "name": string;
    }
    interface AppRouter {
    }
    interface LoginPage {
    }
    interface ModalDialog {
    }
    interface ModalFactory {
        "component": string;
        "cssClass": string;
    }
    interface UrlHome {
    }
    interface UrlLoading {
        "name": string;
    }
    interface UrlProfile {
        "name": string;
    }
    interface UrlSettings {
        "name": string;
    }
}
declare global {
    interface HTMLAgGridElement extends Components.AgGrid, HTMLStencilElement {
    }
    var HTMLAgGridElement: {
        prototype: HTMLAgGridElement;
        new (): HTMLAgGridElement;
    };
    interface HTMLAgGridDemoPageElement extends Components.AgGridDemoPage, HTMLStencilElement {
    }
    var HTMLAgGridDemoPageElement: {
        prototype: HTMLAgGridDemoPageElement;
        new (): HTMLAgGridDemoPageElement;
    };
    interface HTMLAppRouterElement extends Components.AppRouter, HTMLStencilElement {
    }
    var HTMLAppRouterElement: {
        prototype: HTMLAppRouterElement;
        new (): HTMLAppRouterElement;
    };
    interface HTMLLoginPageElement extends Components.LoginPage, HTMLStencilElement {
    }
    var HTMLLoginPageElement: {
        prototype: HTMLLoginPageElement;
        new (): HTMLLoginPageElement;
    };
    interface HTMLModalDialogElement extends Components.ModalDialog, HTMLStencilElement {
    }
    var HTMLModalDialogElement: {
        prototype: HTMLModalDialogElement;
        new (): HTMLModalDialogElement;
    };
    interface HTMLModalFactoryElement extends Components.ModalFactory, HTMLStencilElement {
    }
    var HTMLModalFactoryElement: {
        prototype: HTMLModalFactoryElement;
        new (): HTMLModalFactoryElement;
    };
    interface HTMLUrlHomeElement extends Components.UrlHome, HTMLStencilElement {
    }
    var HTMLUrlHomeElement: {
        prototype: HTMLUrlHomeElement;
        new (): HTMLUrlHomeElement;
    };
    interface HTMLUrlLoadingElement extends Components.UrlLoading, HTMLStencilElement {
    }
    var HTMLUrlLoadingElement: {
        prototype: HTMLUrlLoadingElement;
        new (): HTMLUrlLoadingElement;
    };
    interface HTMLUrlProfileElement extends Components.UrlProfile, HTMLStencilElement {
    }
    var HTMLUrlProfileElement: {
        prototype: HTMLUrlProfileElement;
        new (): HTMLUrlProfileElement;
    };
    interface HTMLUrlSettingsElement extends Components.UrlSettings, HTMLStencilElement {
    }
    var HTMLUrlSettingsElement: {
        prototype: HTMLUrlSettingsElement;
        new (): HTMLUrlSettingsElement;
    };
    interface HTMLElementTagNameMap {
        "ag-grid": HTMLAgGridElement;
        "ag-grid-demo-page": HTMLAgGridDemoPageElement;
        "app-router": HTMLAppRouterElement;
        "login-page": HTMLLoginPageElement;
        "modal-dialog": HTMLModalDialogElement;
        "modal-factory": HTMLModalFactoryElement;
        "url-home": HTMLUrlHomeElement;
        "url-loading": HTMLUrlLoadingElement;
        "url-profile": HTMLUrlProfileElement;
        "url-settings": HTMLUrlSettingsElement;
    }
}
declare namespace LocalJSX {
    interface AgGrid {
        "columnDefs"?: ColumnDef[];
        "darkMode"?: boolean;
        "height"?: string;
        "preferRefresh"?: boolean;
        "rowData"?: any[];
    }
    interface AgGridDemoPage {
        "name"?: string;
    }
    interface AppRouter {
    }
    interface LoginPage {
    }
    interface ModalDialog {
    }
    interface ModalFactory {
        "component"?: string;
        "cssClass"?: string;
    }
    interface UrlHome {
    }
    interface UrlLoading {
        "name"?: string;
    }
    interface UrlProfile {
        "name"?: string;
    }
    interface UrlSettings {
        "name"?: string;
    }
    interface IntrinsicElements {
        "ag-grid": AgGrid;
        "ag-grid-demo-page": AgGridDemoPage;
        "app-router": AppRouter;
        "login-page": LoginPage;
        "modal-dialog": ModalDialog;
        "modal-factory": ModalFactory;
        "url-home": UrlHome;
        "url-loading": UrlLoading;
        "url-profile": UrlProfile;
        "url-settings": UrlSettings;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ag-grid": LocalJSX.AgGrid & JSXBase.HTMLAttributes<HTMLAgGridElement>;
            "ag-grid-demo-page": LocalJSX.AgGridDemoPage & JSXBase.HTMLAttributes<HTMLAgGridDemoPageElement>;
            "app-router": LocalJSX.AppRouter & JSXBase.HTMLAttributes<HTMLAppRouterElement>;
            "login-page": LocalJSX.LoginPage & JSXBase.HTMLAttributes<HTMLLoginPageElement>;
            "modal-dialog": LocalJSX.ModalDialog & JSXBase.HTMLAttributes<HTMLModalDialogElement>;
            "modal-factory": LocalJSX.ModalFactory & JSXBase.HTMLAttributes<HTMLModalFactoryElement>;
            "url-home": LocalJSX.UrlHome & JSXBase.HTMLAttributes<HTMLUrlHomeElement>;
            "url-loading": LocalJSX.UrlLoading & JSXBase.HTMLAttributes<HTMLUrlLoadingElement>;
            "url-profile": LocalJSX.UrlProfile & JSXBase.HTMLAttributes<HTMLUrlProfileElement>;
            "url-settings": LocalJSX.UrlSettings & JSXBase.HTMLAttributes<HTMLUrlSettingsElement>;
        }
    }
}
